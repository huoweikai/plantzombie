package PaowuxianTexiao;

//import mgm.engtst1.AnimaAction;
//import engtst.mgm.GameData;
//import engtst.mgm.GmString;

public class Paowuxiantexiao {

	// AnimaAction aa_up;
	public boolean bUseing;
	boolean bIsPlayer;// 表示玩家还是敌人
	boolean bBisha;
	int iX, iY;
	int iSx, iSy;
	int iGCount;
	int iSpeed;
	int iTtl;
	int iDx, iDy;
	int iType, iCs1, iCs2, iCs3;
	int iAttack;

	public Paowuxiantexiao() {
		bUseing = false;
		// aa_up=new AnimaAction();
	}

	void Moving() {
		if (bUseing) {

			iX = (iDx - iSx) * iTtl / iGCount + iSx;
			iY = (iDy - iSy) * iTtl / iGCount + iSy;
			iTtl++;
			switch (iType) {
			case 1:
				if (iCs1 == 0)
					iX += _sin[iTtl * 10 % 360] * 50 / 1000;
				else
					iX -= _sin[iTtl * 10 % 360] * 50 / 1000;

				break;
			}
		}
	}

	void SetType(int type, int cs1, int cs2, int cs3) {
		iType = type;
		iCs1 = cs1;
		iCs2 = cs2;
		iCs3 = cs3;
	}

	// void Reset(AnimaAction aa,int x,int y,int jd,int speed,boolean b,int a)
	public void Reset(int x, int y, int jd, int speed, int a) {
		int dx, dy;
		dx = _cos[jd % 360];
		dy = _sin[jd % 360];
		iGCount = _sqrt((dx * dx + dy * dy) / (speed * speed));
		// aa_up.copyfrom(aa);
		bUseing = true;
		iX = x;
		iY = y;
		iSx = x;
		iSy = y;
		iDx = dx + x;
		iDy = dy + y;
		iType = 0;
		// bIsPlayer=b;
		iAttack = a;
		iType = 0;

		iTtl = 0;

	}

	void Release() {
		bUseing = false;
	}

	static int _sqrt(int dest) {
		int i, j;
		i = 256;
		j = 128;
		while (j > 0) {
			if (i * i > dest)
				i -= j;
			else
				i += j;
			j /= 2;
		}
		return i;
	}

	public static final int[] _cos = new int[] { 1000, 999, 999, 998, 997, 996,
			994, 992, 990, 987, 984,

			981, 978, 974, 970, 965, 961, 956, 951, 945, 939,

			933, 927, 920, 913, 906, 898, 891, 882, 874, 866,

			857, 848, 838, 829, 819, 809, 798, 788, 777, 766,

			754, 743, 731, 719, 707, 694, 681, 669, 656, 642,

			629, 615, 601, 587, 573, 559, 544, 529, 515, 500,

			484, 469, 453, 438, 422, 406, 390, 374, 358, 342,

			325, 309, 292, 275, 258, 241, 224, 207, 190, 173,

			156, 139, 121, 104, 87, 69, 52, 34, 17, 0,

			-17, -34, -52, -69, -87, -104, -121, -139, -156, -173,

			-190, -207, -224, -241, -258, -275, -292, -309, -325, -342,

			-358, -374, -390, -406, -422, -438, -453, -469, -484, -499,

			-515, -529, -544, -559, -573, -587, -601, -615, -629, -642,

			-656, -669, -681, -694, -707, -719, -731, -743, -754, -766,

			-777, -788, -798, -809, -819, -829, -838, -848, -857, -866,

			-874, -882, -891, -898, -906, -913, -920, -927, -933, -939,

			-945, -951, -956, -961, -965, -970, -974, -978, -981, -984,

			-987, -990, -992, -994, -996, -997, -998, -999, -999, -999,

			-999, -999, -998, -997, -996, -994, -992, -990, -987, -984,

			-981, -978, -974, -970, -965, -961, -956, -951, -945, -939,

			-933, -927, -920, -913, -906, -898, -891, -882, -874, -866,

			-857, -848, -838, -829, -819, -809, -798, -788, -777, -766,

			-754, -743, -731, -719, -707, -694, -681, -669, -656, -642,

			-629, -615, -601, -587, -573, -559, -544, -529, -515, -500,

			-484, -469, -453, -438, -422, -406, -390, -374, -358, -342,

			-325, -309, -292, -275, -258, -241, -224, -207, -190, -173,

			-156, -139, -121, -104, -87, -69, -52, -34, -17, 0,

			17, 34, 52, 69, 87, 104, 121, 139, 156, 173,

			190, 207, 224, 241, 258, 275, 292, 309, 325, 342,

			358, 374, 390, 406, 422, 438, 453, 469, 484, 499,

			515, 529, 544, 559, 573, 587, 601, 615, 629, 642,

			656, 669, 681, 694, 707, 719, 731, 743, 754, 766,

			777, 788, 798, 809, 819, 829, 838, 848, 857, 866,

			874, 882, 891, 898, 906, 913, 920, 927, 933, 939,

			945, 951, 956, 961, 965, 970, 974, 978, 981, 984,

			987, 990, 992, 994, 996, 997, 998, 999, 999, };
	public static final int[] _sin = new int[] { 0, 17, 34, 52, 69, 87, 104,
			121, 139, 156, 173,

			190, 207, 224, 241, 258, 275, 292, 309, 325, 342,

			358, 374, 390, 406, 422, 438, 453, 469, 484, 499,

			515, 529, 544, 559, 573, 587, 601, 615, 629, 642,

			656, 669, 681, 694, 707, 719, 731, 743, 754, 766,

			777, 788, 798, 809, 819, 829, 838, 848, 857, 866,

			874, 882, 891, 898, 906, 913, 920, 927, 933, 939,

			945, 951, 956, 961, 965, 970, 974, 978, 981, 984,

			987, 990, 992, 994, 996, 997, 998, 999, 999, 999,

			999, 999, 998, 997, 996, 994, 992, 990, 987, 984,

			981, 978, 974, 970, 965, 961, 956, 951, 945, 939,

			933, 927, 920, 913, 906, 898, 891, 882, 874, 866,

			857, 848, 838, 829, 819, 809, 798, 788, 777, 766,

			754, 743, 731, 719, 707, 694, 681, 669, 656, 642,

			629, 615, 601, 587, 573, 559, 544, 529, 515, 500,

			484, 469, 453, 438, 422, 406, 390, 374, 358, 342,

			325, 309, 292, 275, 258, 241, 224, 207, 190, 173,

			156, 139, 121, 104, 87, 69, 52, 34, 17, 0,

			-17, -34, -52, -69, -87, -104, -121, -139, -156, -173,

			-190, -207, -224, -241, -258, -275, -292, -309, -325, -342,

			-358, -374, -390, -406, -422, -438, -453, -469, -484, -499,

			-515, -529, -544, -559, -573, -587, -601, -615, -629, -642,

			-656, -669, -681, -694, -707, -719, -731, -743, -754, -766,

			-777, -788, -798, -809, -819, -829, -838, -848, -857, -866,

			-874, -882, -891, -898, -906, -913, -920, -927, -933, -939,

			-945, -951, -956, -961, -965, -970, -974, -978, -981, -984,

			-987, -990, -992, -994, -996, -997, -998, -999, -999, -999,

			-999, -999, -998, -997, -996, -994, -992, -990, -987, -984,

			-981, -978, -974, -970, -965, -961, -956, -951, -945, -939,

			-933, -927, -920, -913, -906, -898, -891, -882, -874, -866,

			-857, -848, -838, -829, -819, -809, -798, -788, -777, -766,

			-754, -743, -731, -719, -707, -694, -681, -669, -656, -642,

			-629, -615, -601, -587, -573, -559, -544, -529, -515, -500,

			-484, -469, -453, -438, -422, -406, -390, -374, -358, -342,

			-325, -309, -292, -275, -258, -241, -224, -207, -190, -173,

			-156, -139, -121, -104, -87, -69, -52, -34, -17 };
}
